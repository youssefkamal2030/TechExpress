@model TechXpress.Models.Dto_s.OrderDTO
@{
    ViewData["Title"] = "Order Details";
    Layout = "_AdminLayout";
}

<div class="row">
    <div class="col-lg-8">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Order #@Model.Id Details</h6>
                <div>
                    <a asp-controller="Admin" asp-action="Orders" class="btn btn-sm btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to Orders
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Subtotal</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderItems)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            @if (!string.IsNullOrEmpty(item.Product.ImageUrl))
                                            {
                                                <img src="@item.Product.ImageUrl" alt="@item.ProductName" class="product-thumbnail me-2" style="width: 50px; height: 50px; object-fit: cover;">
                                            }
                                            <span>@item.ProductName</span>
                                        </div>
                                    </td>
                                    <td>$@item.UnitPrice.ToString("F2")</td>
                                    <td>@item.Quantity</td>
                                    <td>$@((item.UnitPrice * item.Quantity).ToString("F2"))</td>
                                </tr>
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <th colspan="3" class="text-end">Total</th>
                                <th>$@Model.TotalAmount.ToString("F2")</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Order Information</h6>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <h6 class="font-weight-bold">Status</h6>
                    <div class="mb-2">
                        <span class="badge status-badge bg-success">@Model.Status</span>
                    </div>
                    <form asp-action="UpdateOrderStatus" asp-controller="Admin" method="post" class="status-form">
                        <input type="hidden" name="orderId" value="@Model.Id" />
                        <div class="d-flex align-items-center">
                            <select name="status" class="form-select form-select-sm status-select" aria-label="Order status" onchange="toggleUpdateButton(this)">
                                <option value="Pending" selected="@(Model.Status.ToString() == "Pending")">Pending</option>
                                <option value="Processing" selected="@(Model.Status.ToString() == "Processing")">Processing</option>
                                <option value="Shipped" selected="@(Model.Status.ToString() == "Shipped")">Shipped</option>
                                <option value="Delivered" selected="@(Model.Status.ToString() == "Delivered")">Delivered</option>
                                <option value="Completed" selected="@(Model.Status.ToString() == "Completed")">Completed</option>
                                <option value="Cancelled" selected="@(Model.Status.ToString() == "Cancelled")">Cancelled</option>
                            </select>
                            <button type="submit" class="btn btn-sm btn-outline-primary ms-2 update-btn" style="display: none;">
                                <i class="bi bi-check"></i> Update
                            </button>
                        </div>
                    </form>
                </div>

                <div class="mb-3">
                    <h6 class="font-weight-bold">Order Date</h6>
                    <p>@Model.OrderDate.ToString("MM/dd/yyyy HH:mm")</p>
                </div>

                <div class="mb-3">
                    <h6 class="font-weight-bold">Customer Information</h6>
                    <p>
                        <strong>Email:</strong> @Model.UserEmail<br />
                    </p>
                </div>

                <div class="mb-3">
                    <h6 class="font-weight-bold">Payment Method</h6>
                    <p>
                        <i class="bi bi-credit-card me-2"></i> Stripe Payment
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        // Add confirmation before status update
        document.addEventListener('DOMContentLoaded', function() {
            const statusForm = document.querySelector('.status-form');
            
            if (statusForm) {
                statusForm.addEventListener('submit', function(e) {
                    e.preventDefault();
                    
                    const select = document.querySelector('.status-select');
                    const statusText = select.options[select.selectedIndex].text;
                    
                    if (confirm('Are you sure you want to change the order status to "' + statusText + '"?')) {
                        this.submit();
                    }
                });
            }
        });
        
        // Toggle update button visibility based on selection change
        function toggleUpdateButton(selectElement) {
            const form = selectElement.closest('form');
            const currentStatus = document.querySelector('.status-badge').textContent.trim();
            const selectedStatus = selectElement.options[selectElement.selectedIndex].text;
            const updateButton = form.querySelector('.update-btn');
            
            if (currentStatus !== selectedStatus) {
                updateButton.style.display = 'block';
            } else {
                updateButton.style.display = 'none';
            }
        }
    </script>
    
    <style>
        .status-badge {
            font-size: 1rem;
            padding: 0.5rem 0.75rem;
        }
    </style>
} 